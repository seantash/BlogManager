
#ifndef BlogManHTTPClient_H
#define BlogManHTTPClient_H

#include <semaphore.h>
#include <HTTPClientMsg.h>
#include <thread>

class BlogHTTPClient 
{
    private:
        //pthread_t* m_threadInfo;
        std::thread* m_thread;
        bool m_threadActive;
        void httpThreadMain( void );
        //const char* m_threadId;
        
        int m_socket;

        sem_t* m_prcsMsgSem;
        pthread_mutex_t* m_queLock;
        HTTPClientMsg* m_msgQueue;  
        
        bool connectToServer(char* host);
        HTTPClientMsg* dequeueMsg( void );
        char* buildGetPostsMsg(const char *host, const char *page);
        char* getIP(char *host);

    public:
        BlogManHTTPClient( void ); 
        virtual ~BlogManHTTPClient( void );
        bool init( void );
        bool queueMsg( HTTPClientMsg* msg);
};

#endif /* BlogManHTTPClient_H */
